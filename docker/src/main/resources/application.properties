spring.datasource.url=jdbc:mysql://db:3306/bookdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root


# (optional JPA settings)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.initialization-fail-timeout=0



# === Kafka ===
# Point at the broker you just exposed
spring.kafka.bootstrap-servers=kafka:9092

# (De)Serializers for simple String messages
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Consumer group & offset reset policy
spring.kafka.consumer.group-id=book-events-group
spring.kafka.consumer.auto-offset-reset=earliest

# Your topic name (inject into your @Value or config)
app.kafka.topic=book-events

# Redis (container name = redis)
spring.redis.host=redis
spring.redis.port=6379

# (optional) default TTL for cache entries, e.g. 60s
# spring.cache.redis.time-to-live=60000
